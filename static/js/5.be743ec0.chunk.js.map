{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","props","React","createElement","Navigate","to","connect","module","exports","dialogs","dialogsItems","dialog","active","messages","message","DialogItem","path","id","className","s","NavLink","name","Message","maxLenght50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","compose","dialogsPage","sendMessage","sendMessageActionCreator","dialogsElement","map","messagesElement"],"mappings":"qMAIIA,EAA6B,SAACC,GAAK,MAAM,CAC3CC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAACC,GAAc,IACvCC,EAAiB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,YAAAC,KAAAH,GAAAI,YAAAD,KAAAE,YAAAL,GAAAM,MAAAH,KAAAI,YAIpB,OAJoBC,YAAAR,EAAAC,GAAAQ,YAAAT,EAAA,EAAAU,IAAA,SAAAC,MAAA,WAEnB,OAAIR,KAAKS,MAAMhB,OACRiB,IAAAC,cAACf,EAAcI,KAAKS,OADGC,IAAAC,cAACC,IAAQ,CAACC,GAAG,eAE5ChB,EAJoB,CAASa,IAAMd,WAUtC,OAFqCkB,YAAQvB,EAARuB,CAAoCjB,yBChB3EkB,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCILC,EAAa,SAACd,GACzB,IAAIe,EAAO,YAAcf,EAAMgB,GAE/B,OACEf,IAAAC,cAAA,OAAKe,UAAWC,IAAER,OAAS,IAAMQ,IAAEP,QACjCV,IAAAC,cAACiB,IAAO,CAACf,GAAIW,GAAOf,EAAMoB,QCNnBC,EAAU,SAACrB,GACtB,OACEC,IAAAC,cAAA,OAAKe,UAAWC,IAAEL,SAAUb,EAAMa,2CCGhCS,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CAXL,SAACzB,GACtB,OACEC,IAAAC,cAAA,QAAMyB,SAAU3B,EAAM4B,cACpB3B,IAAAC,cAAA,WACED,IAAAC,cAAC2B,IAAK,CAACT,KAAM,UAAWU,UAAWC,IAAUC,SAAU,CAACC,IAAUX,KAClErB,IAAAC,cAAA,WAAKD,IAAAC,cAAA,cAAQ,6CCcNgC,sBACb7B,YAvBoB,SAACtB,GACrB,MAAO,CACLoD,YAAapD,EAAMoD,cAqBI,CAACC,YAAYC,MACtCnD,IAFagD,CDLQ,SAAClC,GAGtB,IAAIsC,EAAiBtC,EAAMmC,YAAY3B,QAAQ+B,IAAI,SAAA7B,GAAM,OAAIT,IAAAC,cAACY,EAAU,CAACM,KAAMV,EAAOU,KAAMtB,IAAKY,EAAOM,GAAIA,GAAIN,EAAOM,OACnHwB,EAAkBxC,EAAMmC,YAAYvB,SAAS2B,IAAI,SAAA1B,GAAO,OAAIZ,IAAAC,cAACmB,EAAO,CAACvB,IAAKe,EAAQG,GAAIH,QAASA,EAAQA,YAgB3G,OACEZ,IAAAC,cAAA,OAAKe,UAAWC,IAAEV,SAChBP,IAAAC,cAAA,OAAKe,UAAWC,IAAET,cACf6B,GAEHrC,IAAAC,cAAA,OAAKe,UAAWC,IAAEN,UACf4B,EACDvC,IAAAC,cAAA,WACED,IAAAC,cAACsB,EAAmB,CAACG,SAbP,SAAC5B,GACrBC,EAAMoC,YAAYrC,EAAMc","file":"static/js/5.be743ec0.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Navigate to='/login'/>\r\n      return <Component {...this.props}/>;\r\n    }\r\n  }\r\n\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ERRF\",\"dialogsItems\":\"Dialogs_dialogsItems__5fpP5\",\"dialog\":\"Dialogs_dialog__Zed43\",\"active\":\"Dialogs_active__gs9W7\",\"messages\":\"Dialogs_messages__3xOtN\",\"message\":\"Dialogs_message__35JY7\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\n\r\nexport const Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/formsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLenght50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={'message'} component={Textarea} validate={[required, maxLenght50]}/>\r\n        <div><button>Add message</button></div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n\r\n  let dialogsElement = props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n  let messagesElement = props.dialogsPage.messages.map(message => <Message key={message.id} message={message.message}/>)\r\n\r\n  // const onMessageChange = e => {\r\n  //   let value = e.target.value\r\n  //   props.updateMessage(value)\r\n  // }\r\n\r\n  // const onSendMessageClick = () => {\r\n  //   props.sendMessage()\r\n  // }\r\n\r\n  const addNewMessage = (value) => {\r\n    props.sendMessage(value.message)\r\n    // props.sendMessage(prop)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElement}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElement}\r\n        <div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n          {/*<div><textarea onChange={onMessageChange} value={props.dialogsPage.newMessageBody}/></div>*/}\r\n          {/*<div>*/}\r\n          {/*  <button onClick={onSendMessageClick}>Add message</button>*/}\r\n          {/*</div>*/}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport {sendMessageActionCreator, updateNewMessageBodyActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     updateMessage: text => {\r\n//       dispatch(updateNewMessageBodyActionCreator(text))\r\n//     },\r\n//     sendMessage: (newMessageBody) => {\r\n//       dispatch(sendMessageActionCreator(newMessageBody))\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {sendMessage:sendMessageActionCreator}),\r\n  withAuthRedirect,\r\n)(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\n"],"sourceRoot":""}