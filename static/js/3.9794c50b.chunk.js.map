{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","props","React","createElement","Navigate","to","connect","module","exports","descriptionBlock","postBlock","posts","item","ProfileStatusWithHooks","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onClick","onChange","e","target","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","className","s","src","photos","large","Preloader","Post","message","like","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","MyPosts","memo","postsElement","map","p","id","likeCount","addPost","newPostText","MyPostsContainer","profilePage","addPostActionCreator","Profile","withRouter","Children","match","params","useParams","console","log","Object","assign","ProfileContainer","_Component","userId","authorizedUserId","window","location","replace","getStatus","getUserProfile","compose"],"mappings":"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","file":"static/js/3.9794c50b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Navigate to='/login'/>\r\n      return <Component {...this.props}/>;\r\n    }\r\n  }\r\n\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2-a_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3qcbS\",\"posts\":\"MyPosts_posts__3ThcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1M9qa\"};","import React, {Component, useEffect, useState} from 'react';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)             // это делается из-за того что после отрисовки статус не всегда успевает подтягиваться и инпут со статусом может быть пустым\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = e => {\r\n    const value = e.target.value\r\n    setStatus(value)\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        {!editMode &&\r\n          <div>\r\n            <span onClick={activateEditMode}>{props.status || 'no status'}</span>\r\n          </div>\r\n        }\r\n        {editMode &&\r\n          <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\nexport const ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large}/>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src='https://thumbs.dreamstime.com/b/businessman-icon-image-male-avatar-profile-vector-glasses-beard-hairstyle-179728610.jpg'/>\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.like}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/formsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={'newPostText'} component={Textarea} validate={[required, maxLength10]}/>\r\n        {/*<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>*/}\r\n      </div>\r\n      <button\r\n        // onClick={addPost}\r\n        // onClick={onSubmit}\r\n      >Add post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport const MyPosts = React.memo((props) => {\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n// return nextProps !== this.props || nextState != this.state\r\n// }\r\n// вроде как но не точно\r\n// при передаче всего стейта эта компонента будет рендериться 3 раза и\r\n// shouldComponentUpdata может это предотвратить она будет проверять\r\n// нужно ли рендерить или нет но есть еще более короткий способ\r\n// это сделать не React.Component а React.PureComponent\r\n// React.memo делает то же самое что и описаное выше\r\n  let postsElement = props.posts.map(p => <Post message={p.message} key={p.id} like={p.likeCount}/>)\r\n\r\n  const addPost = (value) => {\r\n    props.addPost(value.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postBlock}>\r\n      My post\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={addPost}/>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// export const MyPostsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {\r\n//       (store) => {\r\n//         let state = store.getState()\r\n//\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator())\r\n//         }\r\n//\r\n//         let onPostChange = text => {\r\n//           store.dispatch(updateNewPostTextActionCreator(text))\r\n//         }\r\n//\r\n//         return <MyPosts\r\n//           updateNewPostText={onPostChange}\r\n//           addPost={addPost}\r\n//           posts={state.profilePage.posts}\r\n//           newPostText={state.profilePage.newPostText}\r\n//         />}}\r\n//     </StoreContext.Consumer>)\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     updateNewPostText: text => dispatch(updateNewPostTextActionCreator(text)),\r\n//     addPost: (value) => dispatch(addPostActionCreator(value))\r\n//   }\r\n// }\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPost: addPostActionCreator})(MyPosts)\r\n\r\n","import React from 'react';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\nexport const Profile = (props) => {\r\n  // if(!props.profile) {\r\n  //   return <><Preloader /></>\r\n  // }\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, setUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n    const match = {params: useParams()};\r\n    console.log(match)\r\n    return <Children {...props} match={match}/>\r\n  }\r\n}\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if(!userId) {\r\n        window.location.replace('/login')\r\n        // const navigate = useNavigate()\r\n        // navigate('/login')\r\n        // this.context.history.push('/login')\r\n        // let history = useNavigate\r\n        // useNavigate('/login')\r\n        // history('/login')\r\n        // this.props.history.go('/login')\r\n      }\r\n    }\r\n    this.props.getStatus(userId)\r\n    this.props.getUserProfile(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}